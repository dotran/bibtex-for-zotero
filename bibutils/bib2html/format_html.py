#!/usr/bin/env python2
# -*- coding: utf-8 -*-

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import re


def format_html(file):
    f = open(file, 'rb')
    new_content = []
    buf = [None] * 5
    for line in f.readlines():
        line = line.splitlines()[0]  # removes \r\n and takes the string
        
        # if line == "<table>":
        #     line = '<table cellpadding="2">'
        
        if re.match(r'<title>.*</title>', line):
            new_content.append(r"""<style type="text/css">
<!--
td {font-family: Verdana; font-size: 10pt; padding-bottom: 6px}
td:first-child {padding-top: 3px; padding-right: 4px; color:DarkRed; font-family: Verdana; font-size: 8pt}
blockquote {
    margin-top: 5px;
    margin-bottom: 10px;
    margin-left: 25px;
    margin-right: 50px;
    font-family: Calibri;
    font-size: 10.5pt;
}
/* unvisited link */
a:link {
    text-decoration: none;
    color: blue;
}
/* visited link */
a:visited {
    /* color: CadetBlue; */
    color: green;
}
/* mouse over link */
a:hover {
    text-decoration: none;
    /* color: red; */
}
--->
</style>""")
            if file.endswith("_bib.html"):
                line = "<title>Bibs</title>"
            elif file.endswith("_abstracts.html"):
                line = "<title>Abstracts</title>"
            else:
                line = "<title>All Refs</title>"
        
        elif file.endswith("_bib.html") and '.bib</h1>' in line:
            m = re.match(r'<h1>.*\.bib</h1>(.*)', line)
            if m: line = m.groups()[0]
        
        elif re.search(r'\A\s<b>', line):
            line = line.replace(' <b>', ' <font color="MediumVioletRed">')  # DarkMagenta
            if re.search(r'</b>\.?\Z', line):
                line = line.replace('</b>', '</font>')
        
        elif re.search(r'</b>\.?\Z', line):
            line = line.replace('</b>', '</font>')
        
        elif '>DOI<' in line:
            line = line.replace(">DOI<", ">doi<")
        
        elif '>Abstract<' in line:
            line = line.replace(">Abstract<", ">abstract<")
        
        elif '<blockquote><font size="-1">' in line:
            line = line.replace('<blockquote><font size="-1">', '<blockquote>')
        
        elif '</font></blockquote>' in line:
            line = line.replace('</font></blockquote>', '</blockquote>')
        
        elif not file.endswith("_bib.html") and '>http<' not in line and '>PDF<' not in line:
            m = re.search(r'(.*\d+)(--|-)(\d+.*)', line)
            if m: line = m.groups()[0] + '&ndash;' + m.groups()[2]
        elif not file.endswith("_bib.html") and '>http<' not in line and '>PDF<' not in line:
            m = re.search(r'(.*[a-zA-Z]\d+)(--|-)([a-zA-Z]\d+\,.*)', line)
            if m: line = m.groups()[0] + '&ndash;' + m.groups()[2]
        
        elif file.endswith("_bib.html") and ('file = {' in line or 'abstract = {' in line):
            if "}" in line and "}," not in line:
                new_content[-1] = new_content[-1].replace("},", "}")
            continue
        
        if line.startswith("</table><hr>"):
            line = "</table>"
        elif line.startswith("<hr><p><em>This file was generated by"):
            continue
        elif line.startswith('<a href="http://www.lri.fr/~filliatr/bibtex2html/">bibtex2html</a>'):
            continue
        
        if not file.endswith("_bib.html"):
            if '>.pdf</a>' in line:
                line = line.replace('>.pdf</a>', '>http</a>')
            elif '>.html</a>' in line:
                line = line.replace('>.html</a>', '>http</a>')
            # elif '>http</a>' in line:
            #     line = line.replace('>http</a>', '>http</a>')
            if any(i in line for i in [">bib</a>", ">doi</a>", ">PDF</a>", ">http</a>", ">abstract</a>"]):
                s = line.strip().lstrip("[&nbsp;").rstrip("&nbsp;]").rstrip('&nbsp;|')
                s = "&#x202F;" + s + "&#x202F;"
                if ">PDF</a>" in s:         buf[0] = s
                elif ">doi</a>" in s:       buf[1] = s
                elif ">http</a>" in s:      buf[2] = s
                elif ">abstract</a>" in s:  buf[3] = s
                elif ">bib</a>" in s:       buf[4] = s
                else:                       buf.append(s)
                
                if line.endswith("</a>&nbsp;]"):
                    buf = list(filter(None, buf))
                    newline = '[' + '|'.join(buf) + ']'
                    new_content.append(newline)
                    buf = [None] * 5
                    continue
                else:
                    continue
        new_content.append(line)
    f.close()
    
    with open(file, 'wb') as f:
        f.write('\n'.join(new_content))
        # f.write(os.linesep.join(new_content))
