#!/usr/bin/env python2
# -*- coding: utf-8 -*-

from __future__ import division
from __future__ import print_function
from __future__ import absolute_import

import platform
import os
import shutil
import warnings

from .format_html import format_html


#=========================#
#  CHANGE THIS AS NEEDED  #
#=========================#
VERSION    = 'bibtex2html-1.98'
STYLE_FILE = 'plain_boldtitle'
MACRO_FILE = 'bibtex2html_macros.tex'

DEFAULT_OUTPUT_FILENAME = "biblio"


def compile_bib_to_html(bib_chunk, chunk_idx=None, path=None, filename=None):
    """
    Run bibtex2html on a chunk of bib which is limited by its max capacity of
    7000 entries
    """
    
    if len(bib_chunk) > 7000:
        warnings.warn("Exceeding the max capacity of 7000 entries: Only the first 7000 entries is processed.")
    
    parent_dir = os.path.dirname(os.path.abspath(__file__))
    if platform.system() == 'Darwin':
        bibtex2html_exe = os.path.join(parent_dir, VERSION, 'macos', 'bibtex2html')
    elif platform.system() == 'Linux':
        bibtex2html_exe = os.path.join(parent_dir, VERSION, 'linux', 'bibtex2html')
    elif platform.system() == 'Windows':
        bibtex2html_exe = os.path.join(parent_dir, VERSION, 'windows', 'bibtex2html.exe')
    style_file = os.path.join(parent_dir, STYLE_FILE)
    macro_file = os.path.join(parent_dir, MACRO_FILE)
    
    if not path:
        path = os.path.join(os.getcwd(), "output")
    else:
        path = os.path.abspath(path)
    if not os.path.isdir(path):
        os.makedirs(path)
    
    if not filename:
        filename = DEFAULT_OUTPUT_FILENAME
    else:
        filename = os.path.splitext(filename)[0]
    
    # Set file name templates
    tmp_bib_file = os.path.join(path, filename + ".bib")
    HTML_FILES = {'ref': os.path.join(path, filename + "%s.html"),
                  'abs': os.path.join(path, filename + "%s_abstracts.html"),
                  'bib': os.path.join(path, filename + "%s_bib.html")}
    
    # Write bib to a tmp BIB file for use in the BibTeX2HTML converter
    write_bib_file(bib_chunk, tmp_bib_file)
    
    # Execute the BibTeX2HTML program to generate HTML files from the BIB file
    saved_cwd = os.getcwd()
    os.chdir(path)
    os.system(bibtex2html_exe +
              " --style %s"       % style_file +
              " --macros-from %s" % macro_file +
              " --both" +                  # produce both pages with and without abstracts
              " --use-keys" +              # use citekeys from the BibTeX file (not those generated by the style file)
              " --named-field file PDF" +  # add a web link for the field "file" which is displayed as "PDF"
              # " --title string" +        # specify the title of the HTML file (default is the file name)
              # " --note field" +          # declare that a field must be treated like the abstract field, i.e. is an annotation to be displayed as a text paragraph below the entry
              # " --style-sheet mycss" +   # set a style sheet file for the HTML document (default is none)
              # " --html-entities" +       # use HTML entities for macros e.g. \Rightarrow \approx \ast \cdot \copyright
              " --sort-by-date" +
              # " --sort-as-bibtex" +      # sort as BibTeX (usually by author)
              # " --unsorted" +            # unsorted i.e. same order as in .bib file (default)
              # " --revkeys" +             # number entries in reverse order (i.e. from n to 1 in plain style)
              " --reverse-sort" +
              # " --nodoc" +               # do not produce a full HTML document but only its body (e.g. to merge with a bigger HTML document)
              # " --suffix string" +       # give an alternate suffix string for both HTML files and links (default is .html)
              # " --print-keys" +          # print the BibTeX entries on the standard output (one per line), as selected and sorted by bibtex2html
              # " --ignore-errors" +       # ignore BibTeX errors
              " --quiet" +               # be quiet
              # " --warn-error" +          # stop at the first warning
              # " --no-header" +           # do not insert the bibtex2html command in the HTML document (default is to insert it as a comment at the beginning)
              # " --command command" +     # specify the BibTeX command (default is bibtex -min-crossrefs=1000). Useful if you need to specify the full path of the bibtex command
              # " --output file" +         # specifies the output file. If file is -, then the standard output is selected
              " %s" % tmp_bib_file)
    os.chdir(saved_cwd)
    
    # Clean up the tmp BIB file
    os.remove(tmp_bib_file)
    
    # Customize the generated HTML files
    for _, file in HTML_FILES.items():
        format_html(file % '')
    
    # Rename the HTML files with the current chunk index if it exists
    if chunk_idx is not None:
        for _, f in HTML_FILES.items():
            cur_file = f % ''
            new_file = f % chunk_idx
            shutil.copyfile(cur_file, new_file)
            os.remove(cur_file)
    
    return HTML_FILES


def write_bib_file(bib, outfile):
    with open(outfile, 'wb') as f:
        for record in bib:
            f.write('\n')
            f.write('\n'.join(record['outdata']))
            f.write('\n')
